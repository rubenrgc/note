{"id":"CdgY","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854757099},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105}],"generated":{"js":"\"use strict\";function e(e){return e.replace(/[\\t\\n\\r ]+/g,\" \").replace(/^ | $/g,\"\").toLowerCase().toUpperCase()}module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":3,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":3,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":4,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":5,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":6,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":6,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":6,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":7,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":7,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":7,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":13,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":14,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":18,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":18,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/micromark/dist/util/normalize-identifier.js","original":{"line":18,"column":0},"generated":{"line":1,"column":127}}],"sources":{"../node_modules/micromark/dist/util/normalize-identifier.js":"'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n"},"lineCount":null}},"error":null,"hash":"9ee877a8e4a7eda7c7eccd1dcbbb3615","cacheData":{"env":{}}}