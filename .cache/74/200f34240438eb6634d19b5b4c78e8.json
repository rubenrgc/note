{"id":"../node_modules/micromark/dist/parse.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105},{"name":"./initialize/content.js","loc":{"line":3,"column":22},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/content.js"},{"name":"./initialize/document.js","loc":{"line":4,"column":23},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/document.js"},{"name":"./initialize/flow.js","loc":{"line":5,"column":19},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/flow.js"},{"name":"./initialize/text.js","loc":{"line":6,"column":19},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/text.js"},{"name":"./util/combine-extensions.js","loc":{"line":7,"column":32},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/combine-extensions.js"},{"name":"./util/create-tokenizer.js","loc":{"line":8,"column":30},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/create-tokenizer.js"},{"name":"./util/miniflat.js","loc":{"line":9,"column":23},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/miniflat.js"},{"name":"./constructs.js","loc":{"line":10,"column":25},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/parse.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/constructs.js"}],"generated":{"js":"'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/micromark/dist/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../node_modules/micromark/dist/parse.js":"'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n"},"lineCount":37}},"error":null,"hash":"4c4b0ccff97dca88d37b6f1cea48310f","cacheData":{"env":{}}}