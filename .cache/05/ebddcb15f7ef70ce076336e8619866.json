{"id":"../node_modules/micromark/dist/initialize/flow.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105},{"name":"../tokenize/content.js","loc":{"line":5,"column":22},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/flow.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/tokenize/content.js"},{"name":"../tokenize/factory-space.js","loc":{"line":6,"column":27},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/flow.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/tokenize/factory-space.js"},{"name":"../tokenize/partial-blank-line.js","loc":{"line":7,"column":31},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/initialize/flow.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/tokenize/partial-blank-line.js"}],"generated":{"js":"'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/micromark/dist/initialize/flow.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}}],"sources":{"../node_modules/micromark/dist/initialize/flow.js":"'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n"},"lineCount":61}},"error":null,"hash":"226430cf94dc98374ee5ac30554502ad","cacheData":{"env":{}}}