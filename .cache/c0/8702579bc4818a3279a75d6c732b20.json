{"id":"../node_modules/micromark/dist/util/chunked-splice.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105},{"name":"../constant/splice.js","loc":{"line":3,"column":21},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/chunked-splice.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/constant/splice.js"}],"generated":{"js":"'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/micromark/dist/util/chunked-splice.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/micromark/dist/util/chunked-splice.js":"'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n"},"lineCount":39}},"error":null,"hash":"0da1bd9a6a8222b963adc981fb949c20","cacheData":{"env":{}}}