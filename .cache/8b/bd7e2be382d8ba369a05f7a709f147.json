{"id":"../node_modules/micromark/dist/util/combine-extensions.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105},{"name":"../constant/has-own-property.js","loc":{"line":3,"column":29},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/combine-extensions.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/constant/has-own-property.js"},{"name":"./chunked-splice.js","loc":{"line":4,"column":28},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/combine-extensions.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/chunked-splice.js"},{"name":"./miniflat.js","loc":{"line":5,"column":23},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/combine-extensions.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/miniflat.js"}],"generated":{"js":"'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/micromark/dist/util/combine-extensions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../node_modules/micromark/dist/util/combine-extensions.js":"'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n"},"lineCount":50}},"error":null,"hash":"7de622c2092e87c5358a11f285030757","cacheData":{"env":{}}}