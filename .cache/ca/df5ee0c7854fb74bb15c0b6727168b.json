{"id":"../node_modules/micromark/dist/util/safe-from-int.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1626837851105},{"name":"../constant/from-char-code.js","loc":{"line":3,"column":27},"parent":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/util/safe-from-int.js","resolved":"/home/uk/Desktop/projects/web/node_modules/micromark/dist/constant/from-char-code.js"}],"generated":{"js":"'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/micromark/dist/util/safe-from-int.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../node_modules/micromark/dist/util/safe-from-int.js":"'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n"},"lineCount":27}},"error":null,"hash":"4f3c578593a036cf3b8fdb3461cf3368","cacheData":{"env":{}}}