{"id":"../node_modules/property-information/lib/util/defined-info.js","dependencies":[{"name":"/home/uk/Desktop/projects/web/package.json","includedInParent":true,"mtime":1626854181002},{"name":"/home/uk/Desktop/projects/web/.babelrc","includedInParent":true,"mtime":1626836853735},{"name":"/home/uk/Desktop/projects/web/node_modules/property-information/package.json","includedInParent":true,"mtime":1626837851097},{"name":"./info","loc":{"line":3,"column":19},"parent":"/home/uk/Desktop/projects/web/node_modules/property-information/lib/util/defined-info.js","resolved":"/home/uk/Desktop/projects/web/node_modules/property-information/lib/util/info.js"},{"name":"./types","loc":{"line":4,"column":20},"parent":"/home/uk/Desktop/projects/web/node_modules/property-information/lib/util/defined-info.js","resolved":"/home/uk/Desktop/projects/web/node_modules/property-information/lib/util/types.js"}],"generated":{"js":"'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/property-information/lib/util/defined-info.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../node_modules/property-information/lib/util/defined-info.js":"'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n"},"lineCount":41}},"error":null,"hash":"d7a0487be4f77b2d7ece5f705b53f6e0","cacheData":{"env":{}}}